"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[210],{7182:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(6687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9079:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(498),a=n(972),i=(n(6687),n(7182)),o=["components"],l={id:"verification",title:"Verification of Elements"},p=void 0,s={unversionedId:"verification",id:"verification",title:"Verification of Elements",description:"Problem Statement",source:"@site/docs/coteafs-appium/verification.md",sourceDirName:".",slug:"/verification",permalink:"/website/projects/coteafs-appium/verification",editUrl:"https://github.com/WasiqBhamla/website/edit/main/docs/coteafs-appium/verification.md",tags:[],version:"current",lastUpdatedBy:"Wasiq Bhamla",lastUpdatedAt:1647674363,formattedLastUpdatedAt:"3/19/2022",frontMatter:{id:"verification",title:"Verification of Elements"},sidebar:"docs",previous:{title:"Logging",permalink:"/website/projects/coteafs-appium/logging"},next:{title:"Alert Handling",permalink:"/website/projects/coteafs-appium/alerts"}},u={},c=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Solution by this Framework",id:"solution-by-this-framework",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"User has to write a lot more code to verify the expected with actual result and it requires good amount of effort and time to be invested in it."),(0,i.kt)("h2",{id:"solution-by-this-framework"},"Solution by this Framework"),(0,i.kt)("p",null,"Inline Assertions are provided by this framework."),(0,i.kt)("p",null,"Following is an example on how to do it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'. . .\nfinal DashboardActivity main = new DashboardActivity (this.device);\nmain.onElement ("TypedAmt")\n    .verifyThat ()\n    .textShouldBeEqualTo ("$0.1");\n. . .\n')),(0,i.kt)("p",null,"Following is the list of verification methods available:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"shouldBeDisabled")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies if the element is disabled or not.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"shouldBeDisplayed")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies if the element is displayed or not.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"shouldBeEnabled")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies if the element is enabled or not.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"shouldNotBeDisplayed")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies if the element is hidden or not.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"textShouldBeEqualTo")),(0,i.kt)("td",{parentName:"tr",align:null},"Verifies if element text is equal to given string or not.")))))}m.isMDXComponent=!0}}]);