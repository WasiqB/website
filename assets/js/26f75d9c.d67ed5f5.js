"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5641],{4137:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return b}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),b=i,m=s["".concat(c,".").concat(b)]||s[b]||u[b]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9702:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return s}});var r=n(7462),i=n(3366),a=(n(7294),n(4137)),o=["components"],l={id:"clipboard-handling",title:"Clipboard handling"},c=void 0,p={unversionedId:"clipboard-handling",id:"clipboard-handling",isDocsHomePage:!1,title:"Clipboard handling",description:"Getting device clipboard",source:"@site/docs/coteafs-appium/clipboard-handling.md",sourceDirName:".",slug:"/clipboard-handling",permalink:"/website/projects/coteafs-appium/clipboard-handling",editUrl:"https://github.com/WasiqBhamla/website/edit/main/docs/coteafs-appium/clipboard-handling.md",tags:[],version:"current",lastUpdatedBy:"Wasiq Bhamla",lastUpdatedAt:1637764414,formattedLastUpdatedAt:"11/24/2021",frontMatter:{id:"clipboard-handling",title:"Clipboard handling"},sidebar:"docs",previous:{title:"Video streaming",permalink:"/website/projects/coteafs-appium/video-streaming"},next:{title:"Multi Language",permalink:"/website/projects/coteafs-appium/multi-language"}},d=[{value:"Getting device clipboard",id:"getting-device-clipboard",children:[],level:2},{value:"Setting Clipboard on device",id:"setting-clipboard-on-device",children:[],level:2},{value:"Supported Clipboard types",id:"supported-clipboard-types",children:[],level:2}],u={toc:d};function s(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"getting-device-clipboard"},"Getting device clipboard"),(0,a.kt)("p",null,"You can get Clipboard data from Android and iOS device by using following method call."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"  // Get clipboard text\n  String clipboardText = activity.onDevice ().clipboard ();\n\n  // OR, get specific type of clipboard data\n  // This method will return Base64 encoded string\n  // So when you want to use this content, you must \n  // decode this Base64 string.\n  String clipboardContent = activity.onDevice ().clipboard (ClipboardType.IMAGE);\n")),(0,a.kt)("h2",{id:"setting-clipboard-on-device"},"Setting Clipboard on device"),(0,a.kt)("p",null,"There is also an option available to set clipboard data on device. Following are the methods which can be used,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'  // set clipboard text.\n  activity.onDevice ().clipboard ("Hello, how are you?");\n  \n  // set clipboard URL.\n  activity.onDevice ().clipboard (new URL("https://www.google.com"));\n  \n  // Set Image to clipboard.\n  BufferedImage image = ImageIO.read (new File("image-path"));\n  activity.onDevice ().clipboard (image);\n')),(0,a.kt)("h2",{id:"supported-clipboard-types"},"Supported Clipboard types"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ClipboardType.IMAGE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ClipboardType.TEXT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ClipboardType.URL"))))}s.isMDXComponent=!0}}]);